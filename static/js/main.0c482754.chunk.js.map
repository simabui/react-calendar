{"version":3,"sources":["redux/events/eventsSelectors.js","redux/events/eventsActions.js","redux/events/eventsOperations.js","components/Modal/Form.js","components/Modal/Modal.js","components/Modal/ModalContainer.js","components/Calendar/CalendarHelpers.js","components/Calendar/Calendar.js","components/Calendar/CalendarContainer.js","components/App.js","redux/events/eventsReducers.js","redux/combineReducers.js","redux/configureStore.js","index.js"],"names":["getEvents","state","events","collection","getEventToEdit","editedEvent","TYPE","setStart","setSuccess","setFail","dragEvent","removeEvent","eventToEdit","editStart","editSuccess","editFail","putData","data","dispatch","type","event","payload","err","actions","editEvent","Form","_ref","onClose","onChange","onToggle","onDelete","error","react_default","a","createElement","className","TextField","id","label","required","value","title","helperText","length","InputLabelProps","shrink","date","time","disabled","allDay","notes","htmlFor","ToggleButton","selected","size","Check_default","Button","color","onClick","variant","HighlightOff_default","Modal","handleChange","target","_this","setState","Object","defineProperty","hangleToggle","handleKeyPress","e","code","props","handleSubmit","preventDefault","_this$state","_this$props","setEvent","eventTime","concat","start","uuidv4","handleDelete","_this$props2","deleteEvent","window","addEventListener","this","_this$props3","objectSpread","prevProps","_this$props4","removeEventListener","_this$props5","innerRef","ref","onSubmit","Modal_Form","Component","defaultProps","React","forwardRef","Modal_Modal_Modal","assign","connect","headerOptions","left","center","right","prev","timeFormat","hour","minute","hour12","formatTime","modal","createRef","CalendarView","isShown","isEdit","isDraggable","nowIndicator","dateEvent","handleDay","dateStr","blockCoords","getCoords","dayEl","setModalPosition","handleEditEvent","el","gettedEvent","_ref2","extendedProps","month","newMonth","formatMonth","getMonth","day","formatDay","getDate","hours","getHours","minutes","getMinutes","formattedNotes","getFullYear","getEventData","getEvent","handleDragEvent","arg","test","getter","handleClose","handleCloseEdit","coords","current","style","top","elem","box","getBoundingClientRect","bottom","pageYOffset","pageXOffset","offsetWidth","Fragment","main_esm","weekNumberCalculation","defaultView","header","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","eventTimeFormat","dateClick","eventClick","eventDrop","eventStartEditable","eventResizeStart","ModalContainer","dragEventSuccess","Calendar","App","CalendarContainer","defaultData","eventsPersistConfig","key","storage","whitelist","collectionReducers","combineReducers","arguments","undefined","action","toConsumableArray","filter","rootReducer","persistReducer","middleWare","ReduxThunk","enhancer","applyMiddleware","apply","reducers","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","es","integration_react","loading","App_App","document","getElementById"],"mappings":"+RAAaA,EAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,YAClCC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,OAAOG,aCDvCC,EAAO,CAClBC,SAAU,uBACVC,WAAY,yBACZC,QAAS,sBACTC,UAAW,aACXC,YAAa,eACbC,YAAa,oBACbC,UAAW,mBACXC,YAAa,qBACbC,SAAU,uDCPCC,EAAU,SAAAC,GAAI,OAAI,SAAAC,GAC7BA,EDUO,CACLC,KAAMb,EAAKC,WCTb,IACEW,GDWiCE,ECXKH,EDYjC,CACLE,KAAMb,EAAKE,WACXa,QAAS,CAAED,YCbX,MAAOE,GACPJ,EDeG,SAA2BI,GAChC,MAAO,CACLH,KAAMb,EAAKG,QACXY,QAAS,CAAEC,QClBFC,CAA0BD,IDShC,IAA8BF,ICLxBI,EAAY,SAAAJ,GAAK,OAAI,SAAAF,GAChCA,EDqCO,CACLC,KAAMb,EAAKO,YCpCb,IACEK,EDuCG,SAA0BE,GAC/B,MAAO,CACLD,KAAMb,EAAKQ,YACXO,QAAS,CAAED,UC1CFG,CAAyBH,IAClC,MAAOE,GACPJ,ED4CG,SAAuBI,GAC5B,MAAO,CACLH,KAAMb,EAAKO,UACXQ,QAAS,CAAEC,QC/CFC,CAAsBD,6FCuFpBG,SAjGF,SAAAC,GAA6D,IAA1DC,EAA0DD,EAA1DC,QAASC,EAAiDF,EAAjDE,SAAUC,EAAuCH,EAAvCG,SAAUC,EAA6BJ,EAA7BI,SAAU7B,EAAmByB,EAAnBzB,MAAO8B,EAAYL,EAAZK,MAC5D,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,aACNC,UAAQ,EACRX,SAAUA,EACVY,MAAOvC,EAAMwC,MACbC,WAAYX,EACZA,MAAO9B,EAAMwC,MAAME,OAAS,KAAM,IAEpCX,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,aACNnB,KAAK,OACLyB,gBAAiB,CACfC,QAAQ,GAEVjB,SAAUA,EACVY,MAAOvC,EAAM6C,OAEfd,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,aACNnB,KAAK,OACLqB,MAAOvC,EAAM8C,KACbH,gBAAiB,CACfC,QAAQ,GAEVjB,SAAUA,EACVoB,SAAU/C,EAAMgD,SAElBjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,QACNV,SAAUA,EACVY,MAAOvC,EAAMiD,QAEflB,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,SAAShB,UAAU,iBAAlC,UAEEH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEC,SAAUpD,EAAMgD,OAChBT,MAAM,QACNH,GAAG,SACHiB,KAAK,QACL1B,SAAUC,GAEVG,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,QAIJD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACEC,MAAM,YACNC,QAAS/B,EACTgC,QAAQ,YACRL,KAAK,SAJP,UAQCrD,EAAMoC,IACLL,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACEC,MAAM,YACNE,QAAQ,YACRL,KAAK,QACLI,QAAS5B,GAJX,UASFE,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAQC,MAAM,UAAUtC,KAAK,SAASwC,QAAQ,YAAYL,KAAK,SAC5DrD,EAAMoC,GAAK,OAAS,SAGzBL,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAkBE,UAAU,eAAeuB,QAAS/B,OC7EpDkC,6MACJ5D,MAAQ,CACN8C,KAAM,QACND,KAAM,GACNL,MAAO,GACPS,MAAO,GACPnB,MAAO,GACPM,GAAI,GACJY,QAAQ,KA6CVa,aAAe,SAAApC,GAAgB,IAAbqC,EAAarC,EAAbqC,OAChBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBH,EAAO1B,GAAK0B,EAAOvB,WAGtC4B,aAAe,WACbJ,EAAKC,SAAS,SAAAhE,GACZ,MAAO,CACLgD,QAAShD,EAAMgD,aAKrBoB,eAAiB,SAAAC,GACA,WAAXA,EAAEC,OAGN5C,EADoBqC,EAAKQ,MAAjB7C,cAIV8C,aAAe,SAAAH,GACbA,EAAEI,iBADgB,IAAAC,EAE+BX,EAAK/D,MAA9CwC,EAFUkC,EAEVlC,MAAOS,EAFGyB,EAEHzB,MAAOH,EAFJ4B,EAEI5B,KAAMD,EAFV6B,EAEU7B,KAAMG,EAFhB0B,EAEgB1B,OAAQZ,EAFxBsC,EAEwBtC,GAFxBuC,EAGuBZ,EAAKQ,MAAtCK,EAHUD,EAGVC,SAAUrD,EAHAoD,EAGApD,UAAWG,EAHXiD,EAGWjD,QAEvBmD,EAAS,GAAAC,OAAMjC,EAAN,KAAAiC,OAAchC,EAAd,OAEXN,EAAME,OAAS,GACjBqB,EAAKC,SAAS,CAAElC,MAAO,8CAGzBiC,EAAKC,SAAS,CAAElC,MAAO,KAElBM,EAKHb,EAAU,CAAEiB,QAAOS,QAAO8B,MAAOF,EAAW7B,SAAQZ,OAHpDwC,EAAS,CAAEpC,QAAOS,QAAO8B,MAAOF,EAAW7B,SAAQZ,GAAI4C,gBAKzDtD,QAGFuD,aAAe,WAAM,IAAAC,EACcnB,EAAKQ,MAA9BY,EADWD,EACXC,YAAazD,EADFwD,EACExD,QACrByD,EAAYpB,EAAK/D,OACjB0B,wFAxEA0D,OAAOC,iBAAiB,UAAWC,KAAKlB,gBADtB,IAAAmB,EAEMD,KAAKf,MAArB1B,EAFU0C,EAEV1C,KAAM1B,EAFIoE,EAEJpE,MACV0B,EAEFyC,KAAKtB,SAAS,CAAEnB,SACP1B,GAETmE,KAAKtB,SAALC,OAAAuB,EAAA,EAAAvB,CAAA,GAAmB9C,+CAIJsE,GAAW,IAAAC,EACJJ,KAAKf,MAArB1B,EADoB6C,EACpB7C,KAAM1B,EADcuE,EACdvE,MACVsE,EAAU5C,OAASA,GACrByC,KAAKtB,SAAS,CAAEnB,SAId4C,EAAUtE,QAAUA,GACtBmE,KAAKtB,SAALC,OAAAuB,EAAA,EAAAvB,CAAA,GAAmB9C,mDAKrBiE,OAAOO,oBAAoB,UAAWL,KAAKlB,iDAmDpC,IAAAwB,EACuBN,KAAKf,MAA3B7C,EADDkE,EACClE,QAASmE,EADVD,EACUC,SACT/D,EAAUwD,KAAKtF,MAAf8B,MACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa4D,IAAKD,GAC/B9D,EAAAC,EAAAC,cAAA,QAAM8D,SAAUT,KAAKd,cACnBzC,EAAAC,EAAAC,cAAC+D,EAAD,CACEhG,MAAOsF,KAAKtF,MACZ0B,QAASA,EACTC,SAAU2D,KAAKzB,aACfjC,SAAU0D,KAAKnB,aACfrC,MAAOA,EACPD,SAAUyD,KAAKL,wBAjHPgB,aAAdrC,EAqBGsC,aAAe,CACpBrD,KAAM,IAmGKsD,UAAMC,WAAW,SAAC7B,EAAOuB,GAAR,OAC9B/D,EAAAC,EAAAC,cAACoE,EAADpC,OAAAqC,OAAA,CAAOT,SAAUC,GAASvB,MC3GbgC,cAbS,SAAAvG,GACtB,MAAO,CACLmB,MAAOhB,EAAeH,KAGC,SAAAiB,GACzB,MAAO,CACL2D,SAAU,SAAAzD,GAAK,OAAIF,EAASF,EAAQI,KACpCI,UAAW,SAAAJ,GAAK,OAAIF,EAASM,EAAUJ,KACvCgE,YAAa,SAAAhE,GAAK,OAAIF,EJkBnB,SAAqBE,GAC1B,MAAO,CACLD,KAAMb,EAAKK,YACXU,QAAS,CAAED,UIrBoBT,CAAYS,OAIhCoF,CAA6C3C,SCRrD,IAAM4C,EAAgB,CAC3BC,KAAM,kBACNC,OAAQ,QACRC,MAAO,wCACPC,KAAM,qBAEKC,EAAa,CACxBC,KAAM,UACNC,OAAQ,UACRC,QAAQ,GAcV,SAASC,EAAWnE,GAClB,OAAOA,EAAO,GAAP,IAAAgC,OAAgBhC,GAASA,ECpBlC,IAAMoE,EAAQC,sBAEOC,6MACnBpH,MAAQ,CACNqH,SAAS,EACTC,QAAQ,EACRC,aAAa,EACbC,cAAc,EACdC,UAAW,MAabC,UAAY,SAAArD,GACVN,EAAKC,SAAS,CACZqD,SAAS,EACTC,QAAQ,EACRG,UAAWpD,EAAEsD,UAEf,IAAMC,EAAc7D,EAAK8D,UAAUxD,EAAEyD,OACrC/D,EAAKgE,iBAAiBH,EAAaV,MAOrCc,gBAAkB,SAAAvG,GAAmB,IAAhBN,EAAgBM,EAAhBN,MAAO8G,EAASxG,EAATwG,GACpBC,EDbH,SAAAC,GAMJ,IALMrF,EAKNqF,EALDpD,MACAvC,EAIC2F,EAJD3F,MACiBS,EAGhBkF,EAHDC,cAAiBnF,MACjBb,EAEC+F,EAFD/F,GACAY,EACCmF,EADDnF,OAEMqF,EAlBR,SAAqBA,GACnB,IAAMC,EAAWD,EAAQ,EACzB,OAAOC,EAAW,GAAX,IAAAxD,OAAoBwD,GAAaA,EAgB1BC,CAAYzF,EAAK0F,YACzBC,EAfR,SAAmBA,GACjB,OAAOA,EAAM,GAAN,IAAA3D,OAAe2D,GAAQA,EAclBC,CAAU5F,EAAK6F,WACrBC,EAAQ3B,EAAWnE,EAAK+F,YACxBC,EAAU7B,EAAWnE,EAAKiG,cAC5BC,EAAiB/F,EAOrB,OAJKA,IACH+F,EAAiB,IAGZ,CACLnG,KAAI,GAAAiC,OAAKhC,EAAKmG,cAAV,KAAAnE,OAA2BuD,EAA3B,KAAAvD,OAAoC2D,GACxCG,MAAK,GAAA9D,OAAK8D,EAAL,KAAA9D,OAAcgE,GACnB7F,MAAO+F,EACPxG,QACAJ,KACAY,UCXoBkG,CAAa/H,IAGjCgI,EAFqBpF,EAAKQ,MAAlB4E,UAECjB,GACTnE,EAAKC,SAAS,CAAEsD,QAAQ,EAAMD,SAAS,IAEvC,IAAMO,EAAc7D,EAAK8D,UAAUI,GACnClE,EAAKgE,iBAAiBH,EAAaV,MAOrCkC,gBAAkB,SAAAC,GAChB,IAAMC,EDpEH,SAAA7H,GAA2B,IAATN,EAASM,EAATN,MACvB,MAAO,CACLqB,MAAOrB,EAAMqB,MACbS,MAAO9B,EAAM8B,MACb8B,MAAO5D,EAAM4D,MACb/B,OAAQ7B,EAAM6B,OACdZ,GAAIjB,EAAMiB,IC8DGmH,CAAOF,IAEpB5I,EADsBsD,EAAKQ,MAAnB9D,WACE6I,MAOZE,YAAc,WACZzF,EAAKC,SAAS,CAAEqD,SAAS,OAG3BoC,gBAAkB,WAChB1F,EAAKC,SAAS,CAAEsD,QAAQ,OAM1BS,iBAAmB,SAAC2B,EAAQzB,GAC1BA,EAAG0B,QAAQC,MAAMnD,KAAjB,GAAA3B,OAA2B4E,EAAOjD,KAAlC,MACAwB,EAAG0B,QAAQC,MAAMC,IAAjB,GAAA/E,OAA0B4E,EAAOG,IAAjC,SAMFhC,UAAY,SAAAiC,GACV,IAAMC,EAAMD,EAAKE,wBACjB,MAAO,CACLH,IAAKE,EAAIE,OAASC,YAAc,GAChCzD,KAAMsD,EAAItD,KAAO0D,YAAcL,EAAKM,YAAc,4EAI7C,IAAA1F,EAOHY,KAAKtF,MALPuH,EAFK7C,EAEL6C,YACAE,EAHK/C,EAGL+C,UACAJ,EAJK3C,EAIL2C,QACAC,EALK5C,EAKL4C,OACAE,EANK9C,EAML8C,aAEMvH,EAAWqF,KAAKf,MAAhBtE,OAER,OACE8B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqI,SAAA,KACEtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CACEC,sBAAsB,MACtBC,YAAY,eACZC,OAAQjE,EACRkE,QAAS,CAACC,IAAeC,IAAgBC,KACzC5K,OAAQA,EACR6K,gBAAiBjE,EACjBkE,UAAWzF,KAAKoC,UAChBsD,WAAY1F,KAAK0C,gBACjBiD,UAAW3F,KAAK8D,gBAChB8B,mBAAoB3D,EACpB4D,iBAAkB7F,KAAK0C,gBACvBR,aAAcA,IAEfH,GACCtF,EAAAC,EAAAC,cAACmJ,EAAD,CAAOvI,KAAM4E,EAAW/F,QAAS4D,KAAKkE,YAAa3D,SAAUqB,IAE9DI,GAAUvF,EAAAC,EAAAC,cAACmJ,EAAD,CAAO1J,QAAS4D,KAAKmE,gBAAiB5D,SAAUqB,YAlHzBjB,aCE3BM,cAbS,SAAAvG,GACtB,MAAO,CACLC,OAAQF,EAAUC,KAIK,SAAAiB,GACzB,MAAO,CACLR,UAAW,SAAAU,GAAK,OAAIF,EPajB,SAA0BE,GAC/B,MAAO,CACLD,KAAMb,EAAKI,UACXW,QAAS,CAAED,UOhBkBkK,CAAiBlK,KAC9CgI,SAAU,SAAAhI,GAAK,OAAIF,EPyBhB,SAAwBE,GAC7B,MAAO,CACLD,KAAMb,EAAKM,YACXS,QAAS,CAAED,UO5BiBhB,CAAegB,OAIhCoF,CAA6C+E,GClBvCC,6MACnBvL,MAAQ,2EAGN,OACE+B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqI,SAAA,KACEtI,EAAAC,EAAAC,cAACuJ,EAAD,cANyBvF,8ECqCjC,IAAMwF,EAAc,CAClB5I,KAAM,GACN+F,MAAO,GACPpG,MAAO,GACPS,MAAO,GACPD,QAAQ,GCpCV,IAAM0I,EAAsB,CAC1BC,IAAK,SACLC,YACAC,UAAW,CAAC,eAIRC,EAAqBC,0BAAgB,CACzC7L,WDfK,WAA+C,IAApBF,EAAoBgM,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAC,EACpD,OAAQC,EAAOhL,MACb,KAAKb,EAAKE,WACR,SAAAuE,OAAAb,OAAAkI,EAAA,EAAAlI,CAAWjE,GAAX,CAAkBkM,EAAO9K,QAAQD,QAMnC,KAAKd,EAAKI,UACV,KAAKJ,EAAKQ,YACR,SAAAiE,OAAAb,OAAAkI,EAAA,EAAAlI,CACKjE,EAAMoM,OAAO,SAAAjL,GAAK,OAAIA,EAAMiB,KAAO8J,EAAO9K,QAAQD,MAAMiB,MAD7D,CAEE8J,EAAO9K,QAAQD,QAInB,KAAKd,EAAKK,YACR,OAAOuD,OAAAkI,EAAA,EAAAlI,CAAIjE,EAAMoM,OAAO,SAAAjL,GAAK,OAAIA,EAAMiB,KAAO8J,EAAO9K,QAAQD,MAAMiB,MAGrE,QACE,OAAOpC,ICNX8B,MDUK,WAA4C,IAAtB9B,EAAsBgM,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAAd,KAAME,EAAQF,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAC,EACjD,OAAQC,EAAOhL,MACb,KAAKb,EAAKG,QACV,KAAKH,EAAKS,SACR,OAAOoL,EAAO9K,QAAQC,IAGxB,QACE,OAAOrB,ICjBXI,YD6BK,WAAyD,IAA7BJ,EAA6BgM,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,GAAAA,UAAA,GAArBP,EAAaS,EAAQF,UAAAtJ,OAAA,EAAAsJ,UAAA,QAAAC,EAC9D,OAAQC,EAAOhL,MACb,KAAKb,EAAKM,YACR,OAAOuL,EAAO9K,QAAQD,MAGxB,QACE,OAAOnB,MC5BEqM,GAJKN,0BAAgB,CAClC9L,OAAQqM,YAAeZ,EAAqBI,KCjBxCS,GAAa,CAACC,KACdC,GAAWC,kBAAeC,WAAf,EAAmBJ,IAQ7B,IALiBK,GAKXC,IALWD,GAKYP,GAH3BS,sBAAYF,GAAUG,8BAAoBN,MAItCO,GAAYC,YAAaJ,ICTtCK,IAASC,OACPpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAUP,MAAOA,IACf9K,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAaC,QAAS,KAAMN,UAAWA,IACrCjL,EAAAC,EAAAC,cAACsL,EAAD,QAGJC,SAASC,eAAe","file":"static/js/main.0c482754.chunk.js","sourcesContent":["export const getEvents = state => state.events.collection;\nexport const getEventToEdit = state => state.events.editedEvent;\n","export const TYPE = {\n  setStart: 'COLLECTION_SET_START',\n  setSuccess: 'COLLECTION_SET_SUCCESS',\n  setFail: 'COLLECTION_SET_FAIL',\n  dragEvent: 'DRAG_EVENT',\n  removeEvent: 'REMOVE_EVENT',\n  eventToEdit: 'GET_EVENT_TO_EDIT',\n  editStart: 'EDIT_EVENT_START',\n  editSuccess: 'EDIT_EVENT_SUCCESS',\n  editFail: 'EDIT_EVENT_FAIL',\n};\n\nexport function setCollectionStart() {\n  return {\n    type: TYPE.setStart,\n  };\n}\nexport function setCollectionSuccess(event) {\n  return {\n    type: TYPE.setSuccess,\n    payload: { event },\n  };\n}\nexport function setCollectionFail(err) {\n  return {\n    type: TYPE.setFail,\n    payload: { err },\n  };\n}\nexport function dragEventSuccess(event) {\n  return {\n    type: TYPE.dragEvent,\n    payload: { event },\n  };\n}\nexport function removeEvent(event) {\n  return {\n    type: TYPE.removeEvent,\n    payload: { event },\n  };\n}\n\nexport function getEventToEdit(event) {\n  return {\n    type: TYPE.eventToEdit,\n    payload: { event },\n  };\n}\n\nexport function editEventStart() {\n  return {\n    type: TYPE.editStart,\n  };\n}\n\nexport function editEventSuccess(event) {\n  return {\n    type: TYPE.editSuccess,\n    payload: { event },\n  };\n}\n\nexport function editEventFail(err) {\n  return {\n    type: TYPE.editStart,\n    payload: { err },\n  };\n}\n","import * as actions from './eventsActions';\n\nexport const putData = data => dispatch => {\n  dispatch(actions.setCollectionStart());\n\n  try {\n    dispatch(actions.setCollectionSuccess(data));\n  } catch (err) {\n    dispatch(actions.setCollectionFail(err));\n  }\n};\n\nexport const editEvent = event => dispatch => {\n  dispatch(actions.editEventStart());\n\n  try {\n    dispatch(actions.editEventSuccess(event));\n  } catch (err) {\n    dispatch(actions.editEventFail(err));\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Button } from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport './Modal.scss';\n\nconst Form = ({ onClose, onChange, onToggle, onDelete, state, error }) => {\n  return (\n    <div className=\"modal\">\n      <TextField\n        id=\"title\"\n        label=\"Event name\"\n        required\n        onChange={onChange}\n        value={state.title}\n        helperText={error}\n        error={state.title.length > 10 && true}\n      />\n      <TextField\n        id=\"date\"\n        label=\"Event date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={state.date}\n      />\n      <TextField\n        id=\"time\"\n        label=\"Event time\"\n        type=\"time\"\n        value={state.time}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        disabled={state.allDay}\n      />\n      <TextField\n        id=\"notes\"\n        label=\"Notes\"\n        onChange={onChange}\n        value={state.notes}\n      />\n      <label htmlFor=\"allDay\" className=\"modal__toggle\">\n        all Day\n        <ToggleButton\n          selected={state.allDay}\n          value=\"check\"\n          id=\"allDay\"\n          size=\"small\"\n          onChange={onToggle}\n        >\n          <CheckIcon />\n        </ToggleButton>\n      </label>\n\n      <div className=\"modal__buttons\">\n        <Button\n          color=\"secondary\"\n          onClick={onClose}\n          variant=\"contained\"\n          size=\"small\"\n        >\n          Cancel\n        </Button>\n        {state.id && (\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={onDelete}\n          >\n            Delete\n          </Button>\n        )}\n        <Button color=\"primary\" type=\"submit\" variant=\"contained\" size=\"small\">\n          {state.id ? 'Edit' : 'Save'}\n        </Button>\n      </div>\n      <HighlightOffIcon className=\"modal__close\" onClick={onClose} />\n    </div>\n  );\n};\n\nForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  state: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    allDay: PropTypes.bool.isRequired,\n    notes: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Form;\n","/* eslint-disable react/no-did-update-set-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './Form';\n\nclass Modal extends Component {\n  state = {\n    time: '00:00',\n    date: '',\n    title: '',\n    notes: '',\n    error: '',\n    id: '',\n    allDay: false,\n  };\n\n  static propTypes = {\n    date: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n    setEvent: PropTypes.func.isRequired,\n    editEvent: PropTypes.func.isRequired,\n    deleteEvent: PropTypes.func.isRequired,\n    innerRef: PropTypes.shape({}).isRequired,\n    event: PropTypes.shape({}).isRequired,\n  };\n\n  static defaultProps = {\n    date: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n    const { date, event } = this.props;\n    if (date) {\n      // if choosed add new event\n      this.setState({ date });\n    } else if (event) {\n      // if choosed edit event\n      this.setState({ ...event });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { date, event } = this.props;\n    if (prevProps.date !== date) {\n      this.setState({ date });\n    }\n\n    // update edit modal\n    if (prevProps.event !== event) {\n      this.setState({ ...event });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.id]: target.value });\n  };\n\n  hangleToggle = () => {\n    this.setState(state => {\n      return {\n        allDay: !state.allDay,\n      };\n    });\n  };\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    // call parent function\n    const { onClose } = this.props;\n    onClose();\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { title, notes, time, date, allDay, id } = this.state;\n    const { setEvent, editEvent, onClose } = this.props;\n    // format start event\n    const eventTime = `${date}T${time}:00`;\n    // validation\n    if (title.length > 30) {\n      this.setState({ error: 'Title should not be longer than 30 chars' });\n      return;\n    }\n    this.setState({ error: '' });\n    // redux action\n    if (!id) {\n      // create new event\n      setEvent({ title, notes, start: eventTime, allDay, id: uuidv4() });\n    } else {\n      // edit event\n      editEvent({ title, notes, start: eventTime, allDay, id });\n    }\n    onClose();\n  };\n\n  handleDelete = () => {\n    const { deleteEvent, onClose } = this.props;\n    deleteEvent(this.state);\n    onClose();\n  };\n\n  render() {\n    const { onClose, innerRef } = this.props;\n    const { error } = this.state;\n    return (\n      <div className=\"form-modal\" ref={innerRef}>\n        <form onSubmit={this.handleSubmit}>\n          <Form\n            state={this.state}\n            onClose={onClose}\n            onChange={this.handleChange}\n            onToggle={this.hangleToggle}\n            error={error}\n            onDelete={this.handleDelete}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default React.forwardRef((props, ref) => (\n  <Modal innerRef={ref} {...props} />\n));\n","import { connect } from 'react-redux';\nimport { putData, editEvent } from '../../redux/events/eventsOperations';\nimport { removeEvent } from '../../redux/events/eventsActions';\nimport { getEventToEdit } from '../../redux/events/eventsSelectors';\nimport Modal from './Modal';\n\n// redux\n\nconst mapStateToProps = state => {\n  return {\n    event: getEventToEdit(state),\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    setEvent: event => dispatch(putData(event)),\n    editEvent: event => dispatch(editEvent(event)),\n    deleteEvent: event => dispatch(removeEvent(event)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","export function getter({ event }) {\n  return {\n    title: event.title,\n    notes: event.notes,\n    start: event.start,\n    allDay: event.allDay,\n    id: event.id,\n  };\n}\n\n/*\n   Fullcalendar options\n*/\nexport const headerOptions = {\n  left: 'today,prev,next',\n  center: 'title',\n  right: 'dayGridMonth,timeGridWeek,timeGridDay',\n  prev: 'left-double-arrow',\n};\nexport const timeFormat = {\n  hour: '2-digit',\n  minute: '2-digit',\n  hour12: false,\n};\n\n/*\n   Format picked Event\n*/\n\nfunction formatMonth(month) {\n  const newMonth = month + 1;\n  return newMonth < 10 ? `0${newMonth}` : newMonth;\n}\nfunction formatDay(day) {\n  return day < 10 ? `0${day}` : day;\n}\nfunction formatTime(time) {\n  return time < 10 ? `0${time}` : time;\n}\n\nexport function getEventData({\n  start: time,\n  title,\n  extendedProps: { notes },\n  id,\n  allDay,\n}) {\n  const month = formatMonth(time.getMonth());\n  const day = formatDay(time.getDate());\n  const hours = formatTime(time.getHours());\n  const minutes = formatTime(time.getMinutes());\n  let formattedNotes = notes;\n\n  // if notes empty set default\n  if (!notes) {\n    formattedNotes = '';\n  }\n  // return obj to save in store\n  return {\n    date: `${time.getFullYear()}-${month}-${day}`,\n    hours: `${hours}:${minutes}`,\n    notes: formattedNotes,\n    title,\n    id,\n    allDay,\n  };\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-restricted-globals */\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Modal from '../Modal/ModalContainer';\nimport './Calendar.scss';\nimport {\n  getter,\n  headerOptions,\n  timeFormat,\n  getEventData,\n} from './CalendarHelpers';\n\nconst modal = createRef();\n\nexport default class CalendarView extends Component {\n  state = {\n    isShown: false,\n    isEdit: false,\n    isDraggable: true,\n    nowIndicator: true,\n    dateEvent: '',\n  };\n\n  static propTypes = {\n    events: PropTypes.arrayOf(PropTypes.object).isRequired,\n    dragEvent: PropTypes.func.isRequired,\n    getEvent: PropTypes.func.isRequired,\n  };\n\n  /*\n   Opening Modal on clicking date\n  */\n\n  handleDay = e => {\n    this.setState({\n      isShown: true,\n      isEdit: false,\n      dateEvent: e.dateStr,\n    });\n    const blockCoords = this.getCoords(e.dayEl);\n    this.setModalPosition(blockCoords, modal);\n  };\n\n  /*\n   Edit event on Click\n  */\n\n  handleEditEvent = ({ event, el }) => {\n    const gettedEvent = getEventData(event);\n    const { getEvent } = this.props;\n    // redux action\n    getEvent(gettedEvent);\n    this.setState({ isEdit: true, isShown: false });\n\n    const blockCoords = this.getCoords(el);\n    this.setModalPosition(blockCoords, modal);\n  };\n\n  /*\n   Update event on dragging\n  */\n\n  handleDragEvent = arg => {\n    const test = getter(arg);\n    const { dragEvent } = this.props;\n    dragEvent(test);\n  };\n\n  /*\n    Close modal\n  */\n\n  handleClose = () => {\n    this.setState({ isShown: false });\n  };\n\n  handleCloseEdit = () => {\n    this.setState({ isEdit: false });\n  };\n  /*\n    Render Modal in center of block\n  */\n\n  setModalPosition = (coords, el) => {\n    el.current.style.left = `${coords.left}px`;\n    el.current.style.top = `${coords.top}px`;\n  };\n\n  /*\n    set coords of center\n  */\n  getCoords = elem => {\n    const box = elem.getBoundingClientRect();\n    return {\n      top: box.bottom + pageYOffset + 10,\n      left: box.left + pageXOffset - elem.offsetWidth / 2,\n    };\n  };\n\n  render() {\n    const {\n      isDraggable,\n      dateEvent,\n      isShown,\n      isEdit,\n      nowIndicator,\n    } = this.state;\n    const { events } = this.props;\n\n    return (\n      <>\n        <FullCalendar\n          weekNumberCalculation=\"ISO\"\n          defaultView=\"dayGridMonth\"\n          header={headerOptions}\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          events={events}\n          eventTimeFormat={timeFormat}\n          dateClick={this.handleDay}\n          eventClick={this.handleEditEvent}\n          eventDrop={this.handleDragEvent}\n          eventStartEditable={isDraggable}\n          eventResizeStart={this.handleEditEvent}\n          nowIndicator={nowIndicator}\n        />\n        {isShown && (\n          <Modal date={dateEvent} onClose={this.handleClose} innerRef={modal} />\n        )}\n        {isEdit && <Modal onClose={this.handleCloseEdit} innerRef={modal} />}\n      </>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { getEvents } from '../../redux/events/eventsSelectors';\nimport {\n  dragEventSuccess,\n  getEventToEdit,\n} from '../../redux/events/eventsActions';\nimport Calendar from './Calendar';\n\nconst mapStateToProps = state => {\n  return {\n    events: getEvents(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dragEvent: event => dispatch(dragEventSuccess(event)),\n    getEvent: event => dispatch(getEventToEdit(event)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\n","import React, { Component } from 'react';\nimport Calendar from './Calendar/CalendarContainer';\n\nexport default class App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <>\n        <Calendar />\n      </>\n    );\n  }\n}\n","import { TYPE } from './eventsActions';\n\nexport function collectionReducer(state = [], action) {\n  switch (action.type) {\n    case TYPE.setSuccess: {\n      return [...state, action.payload.event];\n    }\n\n    /*\n      delete old event and put new updated date\n    */\n    case TYPE.dragEvent:\n    case TYPE.editSuccess: {\n      return [\n        ...state.filter(event => event.id !== action.payload.event.id),\n        action.payload.event,\n      ];\n    }\n\n    case TYPE.removeEvent: {\n      return [...state.filter(event => event.id !== action.payload.event.id)];\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport function errorReducer(state = null, action) {\n  switch (action.type) {\n    case TYPE.setFail:\n    case TYPE.editFail: {\n      return action.payload.err;\n    }\n\n    default:\n      return state;\n  }\n}\n\nconst defaultData = {\n  date: '',\n  hours: '',\n  title: '',\n  notes: '',\n  allDay: false,\n};\n\nexport function eventToEditReducer(state = defaultData, action) {\n  switch (action.type) {\n    case TYPE.eventToEdit: {\n      return action.payload.event;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  collectionReducer,\n  errorReducer,\n  eventToEditReducer,\n} from './events/eventsReducers';\n\nconst eventsPersistConfig = {\n  key: 'events',\n  storage,\n  whitelist: ['collection'],\n};\n\n// create store states inside phonebook store\nconst collectionReducers = combineReducers({\n  collection: collectionReducer,\n  error: errorReducer,\n  editedEvent: eventToEditReducer,\n});\n\n// root reducer\nconst rootReducer = combineReducers({\n  events: persistReducer(eventsPersistConfig, collectionReducers),\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReduxThunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './combineReducers';\n\n// middleWare\nconst middleWare = [ReduxThunk];\nconst enhancer = applyMiddleware(...middleWare);\n\n// create base store\nfunction configureStore(reducers) {\n  // add extention as 3rd parameter\n  return createStore(reducers, composeWithDevTools(enhancer));\n}\n\nexport const store = configureStore(rootReducer);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport './styles/styles.css';\nimport { store, persistor } from './redux/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}